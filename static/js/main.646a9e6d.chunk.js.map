{"version":3,"sources":["Filter.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","handleOpenTodo","selectedTodoId","className","map","todo","id","completed","title","type","onClick","TodoFilter","handleSaveOption","handleSaveQuery","React","useState","word","setWord","useEffect","onChange","event","target","value","all","active","placeholder","style","pointerEvents","classNames","length","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","handleCloseTodo","isLoading","setIsLoading","user","setUser","userId","userInfo","href","name","App","isLoadedTodos","setIsLoadedTodos","setTodos","visibleTodos","setVisibleTodos","selectedTodo","setSelectedTodo","isOpenedTodo","setIsOpenedTodo","selectFilter","setSelectFilter","searchQuery","setSearchQuery","loadTodos","a","todoList","findTitle","params","toLowerCase","includes","filter","option","searchWord","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.646a9e6d.chunk.js","sourcesContent":["export enum Filter {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  handleOpenTodo: (todo: Todo) => void,\n  selectedTodoId?: number,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  handleOpenTodo,\n  selectedTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" key={todo.id}>\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n            {todo.completed\n              ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td className=\"is-vcentered\" />\n              )}\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed ? 'has-text-success' : 'has-text-danger'}>\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleOpenTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={selectedTodoId === todo.id ? 'far fa-eye-slash' : 'far fa-eye'} />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './TodoFilter.scss';\nimport classNames from 'classnames';\nimport { Filter } from '../../Filter';\n\ntype Props = {\n  handleSaveOption: (option: string) => void,\n  handleSaveQuery: (searchWord: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  handleSaveOption,\n  handleSaveQuery,\n}) => {\n  const [word, setWord] = React.useState('');\n\n  React.useEffect(() => handleSaveQuery(word), [word]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => handleSaveOption(event.target.value)}\n          >\n            <option value={Filter.all}>All</option>\n            <option value={Filter.active}>Active</option>\n            <option value={Filter.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={word}\n          onChange={(event) => setWord(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className={classNames('delete', { 'close-btn': word.length === 0 })}\n            onClick={() => setWord('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo,\n  handleCloseTodo: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, handleCloseTodo }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(todo.userId).then(userInfo => {\n      setIsLoading(false);\n      setUser(userInfo);\n    });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Filter } from './Filter';\n\nexport const App: React.FC = () => {\n  const [isLoadedTodos, setIsLoadedTodos] = useState<boolean>(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isOpenedTodo, setIsOpenedTodo] = useState<boolean>(false);\n  const [selectFilter, setSelectFilter] = useState<string>('all');\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      await getTodos().then(todoList => {\n        setTodos(todoList);\n        setVisibleTodos(todoList);\n      });\n\n      setIsLoadedTodos(true);\n    };\n\n    loadTodos();\n  }, []);\n\n  const findTitle = (title: string) => {\n    const params = searchQuery.toLowerCase();\n\n    return title.toLowerCase().includes(params);\n  };\n\n  useEffect(() => {\n    switch (selectFilter) {\n      case Filter.all:\n        setVisibleTodos(todos.filter(todo => findTitle(todo.title)));\n        break;\n\n      case Filter.active:\n        setVisibleTodos(todos.filter(todo => !todo.completed && findTitle(todo.title)));\n        break;\n\n      case Filter.completed:\n        setVisibleTodos(todos.filter(todo => todo.completed && findTitle(todo.title)));\n        break;\n\n      default:\n        break;\n    }\n  }, [searchQuery, selectFilter]);\n\n  const handleOpenTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n    setIsOpenedTodo(true);\n  };\n\n  const handleCloseTodo = () => {\n    setIsOpenedTodo(false);\n    setSelectedTodo(null);\n  };\n\n  const handleSaveOption = (option: string) => {\n    setSelectFilter(option);\n  };\n\n  const handleSaveQuery = (searchWord: string) => {\n    setSearchQuery(searchWord);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                handleSaveOption={handleSaveOption}\n                handleSaveQuery={handleSaveQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoadedTodos\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    handleOpenTodo={handleOpenTodo}\n                    selectedTodoId={selectedTodo?.id}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isOpenedTodo && selectedTodo\n        && <TodoModal todo={selectedTodo} handleCloseTodo={handleCloseTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}