{"version":3,"sources":["Filter.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","openTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","setOption","setSearchWord","React","useState","word","setWord","useEffect","onChange","event","target","value","ALL","ACTIVE","COMPLEATED","placeholder","style","pointerEvents","classNames","length","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","isOpenTodo","isLoading","setIsLoading","user","setUser","userId","userInfo","href","name","App","isLoadedTodos","setIsLoadedTodos","setTodos","visibleTodos","setVisibleTodos","showTodo","setShowTodo","isOpenedTodo","setIsOpenedTodo","filterSelect","setFilterSelect","searchQuery","setSearchQuery","loadTodos","a","todoList","findTitle","params","toLowerCase","toLocaleLowerCase","includes","filter","option","searchWord","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d201340f.chunk.js","sourcesContent":["export enum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLEATED = 'compleated',\n}\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  openTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, openTodo }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" key={todo.id}>\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n            {todo.completed\n              ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td className=\"is-vcentered\" />\n              )}\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed ? 'has-text-success' : 'has-text-danger'}>\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => openTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './TodoFilter.scss';\nimport classNames from 'classnames';\nimport { Filter } from '../../Filter';\n\ntype Props = {\n  setOption: (option: string) => void,\n  setSearchWord: (searchWord: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({ setOption, setSearchWord }) => {\n  const [word, setWord] = React.useState('');\n\n  React.useEffect(() => setSearchWord(word), [word]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setOption(event.target.value)}\n          >\n            <option value={Filter.ALL}>All</option>\n            <option value={Filter.ACTIVE}>Active</option>\n            <option value={Filter.COMPLEATED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={word}\n          onChange={(event) => setWord(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className={classNames('delete', { 'close-btn': word.length === 0 })}\n            onClick={() => setWord('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo,\n  isOpenTodo: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, isOpenTodo }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(todo.userId).then(userInfo => {\n      setIsLoading(false);\n      setUser(userInfo);\n    });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={isOpenTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Filter } from './Filter';\n\nexport const App: React.FC = () => {\n  const [isLoadedTodos, setIsLoadedTodos] = useState<boolean>(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [showTodo, setShowTodo] = useState<Todo>();\n  const [isOpenedTodo, setIsOpenedTodo] = useState<boolean>(false);\n  const [filterSelect, setFilterSelect] = useState<string>('all');\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      await getTodos().then(todoList => {\n        setTodos(todoList);\n        setVisibleTodos(todoList);\n      });\n\n      setIsLoadedTodos(true);\n    };\n\n    loadTodos();\n  }, []);\n\n  const findTitle = (title: string) => {\n    const params = searchQuery.toLowerCase();\n\n    return title.toLocaleLowerCase().includes(params);\n  };\n\n  useEffect(() => {\n    switch (filterSelect) {\n      case Filter.ALL:\n        setVisibleTodos(todos.filter(todo => findTitle(todo.title)));\n        break;\n\n      case Filter.ACTIVE:\n        setVisibleTodos(todos.filter(todo => !todo.completed && findTitle(todo.title)));\n        break;\n\n      case Filter.COMPLEATED:\n        setVisibleTodos(todos.filter(todo => todo.completed && findTitle(todo.title)));\n        break;\n\n      default:\n        break;\n    }\n  }, [searchQuery, filterSelect]);\n\n  const openTodo = (todo: Todo) => {\n    setShowTodo(todo);\n    setIsOpenedTodo(true);\n  };\n\n  const checkShowTodo = () => {\n    setIsOpenedTodo(false);\n  };\n\n  const setOption = (option: string) => {\n    setFilterSelect(option);\n  };\n\n  const setSearchWord = (searchWord: string) => {\n    setSearchQuery(searchWord);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter setOption={setOption} setSearchWord={setSearchWord} />\n            </div>\n\n            <div className=\"block\">\n              {!isLoadedTodos\n                ? <Loader />\n                : <TodoList todos={visibleTodos} openTodo={openTodo} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isOpenedTodo && showTodo\n        && <TodoModal todo={showTodo} isOpenTodo={checkShowTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}